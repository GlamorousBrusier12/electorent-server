openapi: 3.0.0
info:
  version: 1.0.0
  title: Electorent Api
  description: REST api for Electorent
servers:
  - url: http://localhost:8000/api/
tags:
  - name: Products
    description: Api to manage products
  - name: Users
    description: Api to manage users

paths:
  /product:
    get:
      summary: Gets the list of all products
      tags: [Products]
      responses:
        "200":
          description: list of products
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/products"
    post:
      summary: create a product
      tags: [Products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/products"
      responses:
        "201":
          description: created a product!
  /product/{productId}:
    get:
      summary: gets a single product
      tags: [Products]
      parameters:
        - name: productId
          in: path
          required: true
          description: this is the product id ( auto generated by mongo)
          schema:
            type: string
      responses:
        "200":
          description: searches the product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/products"
    patch:
      summary: updates the product
      tags: [Products]
      parameters:
        - name: productId
          in: path
          required: true
          description: this is the product id ( auto generated by mongo)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/products"
      responses:
        "201":
          description: updated the product!
    delete:
      summary: deletes the product
      tags: [Products]
      parameters:
        - name: productId
          in: path
          required: true
          description: this is the product id ( auto generated by mongo)
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/products"
      responses:
        "201":
          description: updated the product!
  /product/category/{categoryName}:
    get:
      summary: gets all the products related to a particular category
      tags: [Products]
      parameters:
        - name: categoryName
          in: path
          required: true
          description: this is the name of the category that we want to search
          schema:
            type: string
      responses:
        "200":
          description: searches the product
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/products"
    # post:
    #   summary: create a product
    #   tags: [Products]
    #   requestBody:
    #     required: true
    #     content:
    #       application/json:
    #         schema:
    #           $ref: "#/components/schemas/products"
    #   responses:
    #     "201":
    #       description: created a product!

components:
  schemas:
    products:
      type: object
      required:
        - productName
        - price
        - description
        - image
        - type
        - category
        - quantity
      properties:
        id:
          type: string
          description: id is auto-generated by mongodb
        productName:
          type: string
          description: name of the productName
        price:
          type: integer
          description: price of the product
        discount:
          type: integer
          description: discount offered for the product
        description:
          type: description of the product
          description: this describes features of the product
        image:
          type: file
          description: image for the product
        type:
          type: string
          description: tells whether the product is rent/buy
        category:
          type: string
          description: describe the category products belongs to
        quantity:
          type: integer
          description: stock availability
      example:
        productName: Attitude is Everything (Paperback)
        price: 487
        discount: 12
        description: Do you dread going to work? Do you feel tired, unhappy, weighed down? Have you given up on your dreams? The road to a happier, more successful life starts with your attitude--and your attitude is within your control.Whether your outlook is negative, positive or somewhere in between, Jeff Keller, motivational speaker and coach, will show you how to take control and unleash your hidden potential through three powerful steps
        image: ["google.png"]
        type: buy
        category: "Books"
        quantity: 13
